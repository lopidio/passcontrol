package br.com.thecave.passcontrol.screens;

import br.com.thecave.passcontrol.component.util.QueueElementInfoSmall;
import br.com.thecave.passcontrol.controller.QueuePopController;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author Arleudo
 */
public final class QueuePopScreen extends PassControlPanel
{
    ArrayList<JPanel> queuesArea;
    ArrayList<QueueElementInfoSmall> queueElementsInfo;
    
    QueuePopController controller = null;

    /**
     * Creates new form AdminScreen
     */
    public QueuePopScreen()
    {
        super("Controle de Fila", new QueuePopController());
        this.controller = (QueuePopController) getPanelController();
        initComponents();
        
//        jpScrollablePane.setLayout(new BoxLayout(jpScrollablePane, BoxLayout.X_AXIS)); //Talvez esse Layout seja o mais adequado
//        jpScrollablePane.setAlignmentY(TOP_ALIGNMENT);
//        jpScrollablePane.setLayout(new FlowLayout());        

        queueElementsInfo = new ArrayList<>();
        queuesArea = new ArrayList<>(5);
        queuesArea.add(jpMinima);
        queuesArea.add(jpBaixa);
        queuesArea.add(jpMedia);
        queuesArea.add(jpAlta);
        queuesArea.add(jpMaxima);

//        queueElementInfos = new ArrayList<>(5);
//        for (int i = 0; i < 5; i++) 
//        {
//            queueElementInfos.add(new ArrayList<QueueElementInfoSmall>());
//        }
//        for (int i = 0; i < 5; i++) 
//        {
//            //Instancio cada um dos elementos do array anterior
//            queueElementInfos.set(i, new ArrayList<QueueElementInfoSmall>());
//        }
//        insertDefaultQueuesInfo();
      
    }

//    public ArrayList<ArrayList<QueueElementInfoSmall>> getQueueElementInfos() {
//        return queueElementInfos;
//    }

    public QueueElementInfoSmall findQueueElementInfoFromQueueElementId(int queueId)
    {
        for (QueueElementInfoSmall queueElementInfoSmall : queueElementsInfo) 
        {
            if (queueElementInfoSmall.getQueuesManagerBean().getId() == queueId)
            {
                return queueElementInfoSmall;
            }            
        }
        
        return null;
    }

    public ArrayList<QueueElementInfoSmall> getQueueElementsInfo() {
        return queueElementsInfo;
    }
    
    

    public void disableAllQueueElementInfo()
    {
        for (QueueElementInfoSmall queueElementInfoSmall : queueElementsInfo) 
        {
            queueElementInfoSmall.setEnabled(false);
        }
        for (JPanel queueArea : queuesArea)
        {
            queueArea.revalidate();
            queueArea.repaint();
        }        
    }    
    
    public ArrayList<JPanel> getQueuesArea() {
        return queuesArea;
    }

    public JPanel getJpScrollablePane() {
        return jpScrollablePane;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlWaitingBalcony = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jpOutterScrollPane = new javax.swing.JScrollPane();
        jpScrollablePane = new javax.swing.JPanel();
        jpMaxima = new javax.swing.JPanel();
        jpAlta = new javax.swing.JPanel();
        jpMedia = new javax.swing.JPanel();
        jpBaixa = new javax.swing.JPanel();
        jpMinima = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1350, 680));
        setPreferredSize(new java.awt.Dimension(1350, 680));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlWaitingBalcony.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jlWaitingBalcony.setText("-");
        add(jlWaitingBalcony, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 260, -1));

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel3.setText("Guichê em espera:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jpOutterScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jpOutterScrollPane.setViewportBorder(javax.swing.BorderFactory.createEtchedBorder());

        jpScrollablePane.setAlignmentX(0.0F);
        jpScrollablePane.setAlignmentY(0.0F);
        jpScrollablePane.setMaximumSize(new java.awt.Dimension(1120, 3600));
        jpScrollablePane.setMinimumSize(new java.awt.Dimension(1120, 600));
        jpScrollablePane.setPreferredSize(new java.awt.Dimension(1100, 680));

        jpMaxima.setBackground(new java.awt.Color(0, 153, 191));
        jpMaxima.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jpMaxima.setForeground(java.awt.Color.darkGray);
        jpMaxima.setAlignmentY(0.1F);
        jpMaxima.setMaximumSize(new java.awt.Dimension(210, 8800));
        jpMaxima.setMinimumSize(new java.awt.Dimension(210, 128));
        jpMaxima.setPreferredSize(new java.awt.Dimension(225, 1000));
        jpMaxima.setRequestFocusEnabled(false);
        jpMaxima.setLayout(new javax.swing.BoxLayout(jpMaxima, javax.swing.BoxLayout.Y_AXIS));
        jpScrollablePane.add(jpMaxima);

        jpAlta.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jpAlta.setForeground(java.awt.Color.darkGray);
        jpAlta.setAlignmentY(0.1F);
        jpAlta.setMaximumSize(new java.awt.Dimension(210, 8800));
        jpAlta.setMinimumSize(new java.awt.Dimension(210, 128));
        jpAlta.setPreferredSize(new java.awt.Dimension(225, 1000));
        jpAlta.setRequestFocusEnabled(false);
        jpAlta.setLayout(new javax.swing.BoxLayout(jpAlta, javax.swing.BoxLayout.Y_AXIS));
        jpScrollablePane.add(jpAlta);

        jpMedia.setBackground(new java.awt.Color(0, 153, 191));
        jpMedia.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jpMedia.setForeground(java.awt.Color.darkGray);
        jpMedia.setAlignmentY(0.1F);
        jpMedia.setMaximumSize(new java.awt.Dimension(210, 8800));
        jpMedia.setMinimumSize(new java.awt.Dimension(210, 128));
        jpMedia.setPreferredSize(new java.awt.Dimension(225, 1000));
        jpMedia.setRequestFocusEnabled(false);
        jpMedia.setLayout(new javax.swing.BoxLayout(jpMedia, javax.swing.BoxLayout.Y_AXIS));
        jpScrollablePane.add(jpMedia);

        jpBaixa.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jpBaixa.setForeground(java.awt.Color.darkGray);
        jpBaixa.setAlignmentY(0.1F);
        jpBaixa.setMaximumSize(new java.awt.Dimension(210, 8800));
        jpBaixa.setMinimumSize(new java.awt.Dimension(210, 128));
        jpBaixa.setPreferredSize(new java.awt.Dimension(225, 1000));
        jpBaixa.setRequestFocusEnabled(false);
        jpBaixa.setLayout(new javax.swing.BoxLayout(jpBaixa, javax.swing.BoxLayout.Y_AXIS));
        jpScrollablePane.add(jpBaixa);

        jpMinima.setBackground(new java.awt.Color(0, 153, 191));
        jpMinima.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jpMinima.setForeground(java.awt.Color.darkGray);
        jpMinima.setAlignmentY(0.1F);
        jpMinima.setMaximumSize(new java.awt.Dimension(210, 8800));
        jpMinima.setMinimumSize(new java.awt.Dimension(210, 128));
        jpMinima.setPreferredSize(new java.awt.Dimension(225, 1000));
        jpMinima.setRequestFocusEnabled(false);
        jpMinima.setLayout(new javax.swing.BoxLayout(jpMinima, javax.swing.BoxLayout.Y_AXIS));
        jpScrollablePane.add(jpMinima);

        jpOutterScrollPane.setViewportView(jpScrollablePane);

        add(jpOutterScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 1210, 450));

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Prioridade Máxima");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel6.setAlignmentX(0.5F);
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, -1, -1));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Prioridade Alta");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setAlignmentX(0.5F);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, -1, -1));

        jLabel8.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Prioridade Média");
        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel8.setAlignmentX(0.5F);
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, -1, -1));

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Prioridade Baixa");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel7.setAlignmentX(0.5F);
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 60, -1, -1));

        jLabel9.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Prioridade Mínima");
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel9.setAlignmentX(0.5F);
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 60, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jlWaitingBalcony;
    private javax.swing.JPanel jpAlta;
    private javax.swing.JPanel jpBaixa;
    private javax.swing.JPanel jpMaxima;
    private javax.swing.JPanel jpMedia;
    private javax.swing.JPanel jpMinima;
    private javax.swing.JScrollPane jpOutterScrollPane;
    private javax.swing.JPanel jpScrollablePane;
    // End of variables declaration//GEN-END:variables

    public void clearAllQueues() 
    {
        queueElementsInfo.clear();
        //Limpo todos os exibidores de fila
        for (JPanel queueArea : queuesArea)
        {
            for (Component component : queueArea.getComponents())
            {
                //Removo todos os componentes do tupo queue info small
                if (component instanceof QueueElementInfoSmall)
                    queueArea.remove(component);
            }
//            queueArea.removeAll();
            queueArea.repaint();
            queueArea.revalidate();
        }
        jlWaitingBalcony.setText("-");
    }

    public void setWaitingBalconyName(String number)
    {
        jlWaitingBalcony.setText(number);
    }

    public JScrollPane getJpOutterScrollPane() {
        return jpOutterScrollPane;
    }
    
}
