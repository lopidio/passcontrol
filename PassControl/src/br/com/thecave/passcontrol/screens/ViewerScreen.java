package br.com.thecave.passcontrol.screens;

import br.com.thecave.passcontrol.component.util.QueueElementInfoBig;
import br.com.thecave.passcontrol.controller.ViewerController;
import java.awt.Image;
import java.util.ArrayList;
import java.util.TimerTask;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;

/**
 *
 * @author Arleudo
 */
public class ViewerScreen extends PassControlPanel
{

    ViewerController controller = null;
    ArrayList<QueueElementInfoBig> elementInfoBigBuffer = new ArrayList<>();

    /**
     * Creates new form AdminScreen
     */
    public ViewerScreen()
    {
        super("Visualizador", new ViewerController());
        this.controller = (ViewerController) getPanelController();
        initComponents();
        jpQueueInfoBig.setLayout(new BoxLayout(jpQueueInfoBig, BoxLayout.X_AXIS));
        jpQueueInfoBig.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpQueueInfoBig = new javax.swing.JPanel();
        lblSlide = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jpQueueInfoBig.setBackground(new java.awt.Color(255, 255, 255));
        jpQueueInfoBig.setMaximumSize(new java.awt.Dimension(440, 256));
        jpQueueInfoBig.setMinimumSize(new java.awt.Dimension(440, 256));
        jpQueueInfoBig.setPreferredSize(new java.awt.Dimension(440, 256));
        add(jpQueueInfoBig);
        jpQueueInfoBig.setBounds(490, 190, 440, 256);

        lblSlide.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlide.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        add(lblSlide);
        lblSlide.setBounds(0, 0, 1370, 800);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jpQueueInfoBig;
    private javax.swing.JLabel lblSlide;
    // End of variables declaration//GEN-END:variables

    public void setPresentationImage( Image img )
    {
        if (img != null)
        {
            lblSlide.setIcon(new ImageIcon(img));
            lblSlide.revalidate();
            lblSlide.repaint();
        }
    }
    
    private void showQueueElementInfo()
    {
        if (elementInfoBigBuffer.isEmpty())
        {
            jpQueueInfoBig.removeAll();
            jpQueueInfoBig.setVisible(false);            
        }
        else
        {
            jpQueueInfoBig.setVisible(true);
            jpQueueInfoBig.add(elementInfoBigBuffer.remove(0));

            java.util.Timer timer = new java.util.Timer();
            timer.schedule( new TimerTask()
                                {
                                   @Override
                                   public void run() 
                                   { 
                                       showQueueElementInfo();
                                   }
                                 }, 7500); //7,5 segundos antes de desaparecer
  
        }
        jpQueueInfoBig.revalidate();
        jpQueueInfoBig.repaint();            
    }

    public void addQueueElementInfo( QueueElementInfoBig elementInfoBig )
    {
        elementInfoBigBuffer.add(elementInfoBig);
        showQueueElementInfo();
    }
}
